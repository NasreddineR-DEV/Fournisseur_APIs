package ma.oncf.digital.entity;
// Generated Jun 14, 2019 9:44:28 PM by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;

/**
 * Connexion generated by hbm2java
 */
@Entity
@Table(name="connexion"
    ,schema="public"
)
public class Connexion  implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private String login;
     private Fournisseur fournisseur;
     private String password;
     private String codeTier;
     private String adresse;
     private int actif;
     private String codeReset;
     private int notification;
     private Date dateCreation;
     private Date dateModification;
     private Integer compteur;
     private Date dateConnexion;

    public Connexion() {
    }

	
    public Connexion(String login, String codeTier, String adresse) {
        this.login = login;
        this.codeTier = codeTier;
        this.adresse = adresse;
    }
    public Connexion(String login, Fournisseur fournisseur, String password, String codeTier, String adresse, Short actif, String codeReset, Short notification, Date dateCreation, Date dateModification, Integer compteur, Date dateConnexion) {
       this.login = login;
       this.fournisseur = fournisseur;
       this.password = password;
       this.codeTier = codeTier;
       this.adresse = adresse;
       this.actif = actif;
       this.codeReset = codeReset;
       this.notification = notification;
       this.dateCreation = dateCreation;
       this.dateModification = dateModification;
       this.compteur = compteur;
       this.dateConnexion = dateConnexion;
    }
   
     @Id 

    @NotNull(message="Login could not be null or empty")
    @Size(min=5,message="Login must be more than 5 caracters")
    @Column(name="login", unique=true, nullable=false)
    public String getLogin() {
        return this.login;
    }
    
    public void setLogin(String login) {
        this.login = login;
    }

    @OneToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_fournisseur")
    public Fournisseur getFournisseur() {
        return this.fournisseur;
    }
    
    public void setFournisseur(Fournisseur fournisseur) {
        this.fournisseur = fournisseur;
    }

    @Column(name="password")
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    
    @Column(name="code_tier", nullable=false, length=100)
    public String getCodeTier() {
        return this.codeTier;
    }
    
    public void setCodeTier(String codeTier) {
        this.codeTier = codeTier;
    }

    
    @Column(name="adresse", nullable=false, length=200)
    public String getAdresse() {
        return this.adresse;
    }
    
    public void setAdresse(String adresse) {
        this.adresse = adresse;
    }

    
    @Column(name="actif")
    public int getActif() {
        return this.actif;
    }
    
    public void setActif(int actif) {
        this.actif = actif;
    }

    
    @Column(name="code_reset", length=10)
    public String getCodeReset() {
        return this.codeReset;
    }
    
    public void setCodeReset(String codeReset) {
        this.codeReset = codeReset;
    }

    
    @Column(name="notification")
    public int getNotification() {
        return this.notification;
    }
    
    public void setNotification(int notification) {
        this.notification = notification;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="date_creation", length=13)
    public Date getDateCreation() {
        return this.dateCreation;
    }
    
    public void setDateCreation(Date dateCreation) {
        this.dateCreation = dateCreation;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="date_modification", length=13)
    public Date getDateModification() {
        return this.dateModification;
    }
    
    public void setDateModification(Date dateModification) {
        this.dateModification = dateModification;
    }

    
    @Column(name="compteur")
    public Integer getCompteur() {
        return this.compteur;
    }
    
    public void setCompteur(Integer compteur) {
        this.compteur = compteur;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="date_connexion", length=13)
    public Date getDateConnexion() {
        return this.dateConnexion;
    }
    
    public void setDateConnexion(Date dateConnexion) {
        this.dateConnexion = dateConnexion;
    }

   


	




}


